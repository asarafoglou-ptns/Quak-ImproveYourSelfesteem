fit_cfa <- sem(cfa, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
fit_cfa1 <- sem(cfa, RRB_Hope_Optimism_Data, estimator = "ML")
fitmeasures(fit_cfa1)[c("rmsea", "cfi", "tli")]
fitmeasures(fit_cfa1)[c("rmsea", "cfi", "tli")]
cfa <- '
extraversion =~ E1 + E2 + E3 + E4
agreeableness =~ A1 + A2 + A3 + A4
conscientiousness =~ C1 + C2 + C3 + C4
neuroticism =~ N1 + N2 + N3 + N4
openness =~ O1 + O2 + O3 + O4
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa <- sem(cfa, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
mod = modindices(fit_cfa)
head(mod[order(mod$mi, decreasing=TRUE), ], 10)
# Adding modifications
cfa_add1 <- '
extraversion =~ E1 + E2 + E3 + E4
agreeableness =~ A1 + A2 + A3 + A4
conscientiousness =~ C1 + C2 + C3 + C4
neuroticism =~ N1 + N2 + N3 + N4
openness =~ O1 + O2 + O3 + O4
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
BISBAS8 ~~ BISBAS13
'
fit_cfa_add1 <- sem(cfa_add1, RRB_Hope_Optimism_Data, estimator = "MLR")
mod_add1 = modindices(fit_cfa_add1)
head(mod_add1[order(mod_add1$mi, decreasing=TRUE), ], 10)
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
lavTestLRT(fit_cfa, fit_cfa_add1)
lavTestLRT(fit_cfa, fit_cfa_add1)
lavTestLRT(fit_cfa_add1, fit_cfa)
anova(fit_cfa_add1, fit_cfa)
anova(fit_cfa_add1, fit_cfa)
# Adding modifications
cfa_add1 <- '
extraversion =~ E1 + E2 + E3 + E4
agreeableness =~ A1 + A2 + A3 + A4
conscientiousness =~ C1 + C2 + C3 + C4
neuroticism =~ N1 + N2 + N3 + N4
openness =~ O1 + O2 + O3 + O4
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
neuroticism =~ BISBAS16
'
fit_cfa_add1 <- sem(cfa_add1, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
anova(fit_cfa_add1, fit_cfa)
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
# Structural equation model
model <- '
extraversion =~ E1 + E2 + E3 + E4
agreeableness =~ A1 + A2 + A3 + A4
conscientiousness =~ C1 + C2 + C3 + C4
neuroticism =~ N1 + N2 + N3 + N4
openness =~ O1 + O2 + O3 + O4
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
hope ~ extraversion + agreeableness + conscientiousness + neuroticism + openness + Sex
activation ~ extraversion + neuroticism + Sex + a1 * hope + a2 * optimism
future ~ b * activation + c1 * hope + c2 * optimism + Sex
med_hope := a1 * b
med_optimism := a2 * b
'
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
# CFA testing
cfa <- '
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa <- sem(cfa, RRB_Hope_Optimism_Data, estimator = "MLR")
summary(fit_cfa)
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
mod = modindices(fit_cfa)
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
head(mod[order(mod$mi, decreasing=TRUE), ], 10)
# Adding modifications
cfa_add1 <- '
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa_add1 <- sem(cfa_add1, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
anova(fit_cfa_add1, fit_cfa)
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
lavTestLRT(fit_cfa_add1, fit_cfa)
# Structural equation model
model <- '
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
activation ~ a1 * hope + a2 * optimism
future ~ b * activation + c1 * hope + c2 * optimism
med_hope := a1 * b
med_optimism := a2 * b
'
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
summary(fit)
fitmeasures(fit)[c("rmsea", "cfi", "tli")]
head(mod[order(mod$mi, decreasing=TRUE), ], 10)
semPaths(fit)
library(semPlot)
semPaths(fit)
summary(fit_cfa)
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
max(RRB_Hope_Optimism_Data$CFC1)
max(RRB_Hope_Optimism_Data$BISBAS1)
max(RRB_Hope_Optimism_Data$Hope1)
max(RRB_Hope_Optimism_Data$LOTR1)
fit_cfa <- sem(cfa, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
head(mod[order(mod$mi, decreasing=TRUE), ], 10)
# Adding modifications
cfa_add1 <- '
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
BISBAS8 ~~ BISBAS13
'
fit_cfa_add1 <- sem(cfa_add1, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
# Adding modifications
cfa_add1 <- '
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa_add1 <- sem(cfa_add1, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
lavTestLRT(fit_cfa_add1, fit_cfa)
lavTestLRT(fit_cfa, fit_cfa_add1)
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli", "logLik")]
fitmeasures(fit_cfa_add1)
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli", "logl")]
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli", "logl")]
mod_add1 = modindices(fit_cfa_add1)
head(mod_add1[order(mod_add1$mi, decreasing=TRUE), ], 10)
summary(fit_cfa)
parameterEstimates(fit, standardized=TRUE)
parameterEstimates(fit)
parameterEstimates(fit_cfa)
min(parameterEstimates(fit_cfa)["est"])
min(abs(parameterEstimates(fit_cfa)["est"]))
par = parameterEstimates(fit_cfa)["est"]
head(par[order(par$est), ], 10)
head(par[order(abs(par$est)), ], 10)
head(mod[order(mod$mi, decreasing=TRUE), ], 10)
par = parameterEstimates(fit_cfa)
head(par[order(abs(par$est)), ], 10)
lavInspect(fit_cfa, "item.tcor")
lavInspect(fit_cfa)
lav = lavInspect(fit_cfa)
View(lav)
lav = lavInspect(fit_cfa, "cor.ov")
head(par[order(abs(par$est)), ], 10)
cfa_sub1 <- '
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
cfa_sub1 <- '
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa_sub1 <- sem(cfa_sub1, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_sub1)[c("rmsea", "cfi", "tli", "logl")]
fitmeasures(fit_cfa_sub1)[c("rmsea", "cfi", "tli")]
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli", "logl")]
fitmeasures(fit_cfa)[c("rmsea", "cfi", "tli")]
head(mod_add1[order(mod_add1$mi, decreasing=TRUE), ], 10)
cfa_add2 <- '
LOTR3 ~~    LOTR7 78.064
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa_add2 <- sem(cfa_add2, RRB_Hope_Optimism_Data, estimator = "MLR")
cfa_add2 <- '
LOTR3 ~~    LOTR7
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
'
fit_cfa_add2 <- sem(cfa_add2, RRB_Hope_Optimism_Data, estimator = "MLR")
fitmeasures(fit_cfa_add2)[c("rmsea", "cfi", "tli")]
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli", "logl")]
fitmeasures(fit_cfa_add1)[c("rmsea", "cfi", "tli")]
mod_add2 = modindices(fit_cfa_add2)
head(mod_add2[order(mod_add2$mi, decreasing=TRUE), ], 10)
mod_add2
head(mod_add2[order(mod_add2$mi, decreasing=TRUE), ], 20)
head(mod_add2[order(mod_add2$mi, decreasing=TRUE), ], 40)
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "gender")
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Sex")
rlang::last_error()
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Sex")
# weak invariance
fit2 <- sem(cfa_add1, data = RRB_Hope_Optimism_Data, group = "Sex",
group.equal = "loadings")
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Gender")
library(dplyr)
n_distinct(RRB_Hope_Optimism_Data$Sex)
n_distinct(RRB_Hope_Optimism_Data$Gender)
is.numeric(RRB_Hope_Optimism_Data$Sex)
rlang::last_error()
rlang::last_trace()
is.numeric(RRB_Hope_Optimism_Data$Education)
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Education")
RRB_Hope_Optimism_Data$Sex = as.character(RRB_Hope_Optimism_Data$Sex)
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Sex")
unique(RRB_Hope_Optimism_Data$Gender)
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Sex", group.partial = c("Male", "Female"))
table(RRB_Hope_Optimism_Data$Gender)
101/222
1/222
1/222 * 1--
s
1/222 * 100
116/222*100
4/222*100
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Gender", group.partial = c("Male", "Female"))
# configural invariance
fit1 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Gender", group.label = c("Male", "Female"))
fitmeasures(fit_cfa_sub1)[c("rmsea", "cfi", "tli")]
summary(fit1)
# weak invariance
fit2 <- sem(cfa_add1, data = RRB_Hope_Optimism_Data, group = "Sex",
group.equal = "loadings")
# weak invariance
fit2 <- sem(cfa_add1, data = RRB_Hope_Optimism_Data, group = "Gender",
group.label = c("Male", "Female"), group.equal = "loadings")
# strong invariance
fit3 <- sem(cfa_add1, data = RRB_Hope_Optimism_Data, group = "gender",
group = "Gender", group.label = c("Male", "Female"),
group.equal = c("intercepts", "loadings"))
# strong invariance
fit3 <- sem(cfa_add1, data = RRB_Hope_Optimism_Data, group = "Gender",
group.label = c("Male", "Female"),
group.equal = c("intercepts", "loadings"))
# model comparison tests
lavTestLRT(fit1, fit2, fit3)
# model comparison tests
lavTestLRT(fit1, fit2)
summary(lavTestLRT(fit1, fit2))
# model comparison tests
anova(fit1, fit2)
3117-3062
# weak invariance
fit2 <- sem(cfa_add2, data = RRB_Hope_Optimism_Data, group = "Gender",
group.label = c("Male", "Female"), group.equal = "loadings")
# Structural equation model
model <- '
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
activation ~ a1 * hope + a2 * optimism
future ~ b * activation + c1 * hope + c2 * optimism
med_hope := a1 * b
med_optimism := a2 * b
'
# Structural equation model
model <- '
LOTR3 ~~ LOTR7
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
hope ~ a1 * activation
optimism ~ a2 * activation
future ~ b1 * hope + b2 * optimism + c * activation
med_hope := a1 * b1
med_optimism := a2 * b2
'
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
semPaths(fit)
fitmeasures(fit)[c("rmsea", "cfi", "tli")]
summary(fit)
fit_boot <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR", se = "bootstrap")
fit_boot <- sem(model, RRB_Hope_Optimism_Data, estimator = "ML", se = "bootstrap")
summary(fit_boot)
summart(fit)
summary(fit)
# Structural equation model
model <- '
LOTR3 ~~ LOTR7
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
hope ~ a1 * activation
optimism ~ a2 * activation
future ~ b1 * hope + b2 * optimism + c * activation
'
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
summary(fit)
# Structural equation model
model <- '
LOTR3 ~~ LOTR7
BISBAS8 ~~ BISBAS13
hope=~ Hope1 + Hope2 + Hope3 + Hope4 + Hope5 + Hope6 + Hope7 + Hope8 + Hope9 + Hope10 + Hope11 + Hope12
future =~ CFC1 + CFC2 + CFC3 + CFC4 + CFC5 + CFC6 + CFC7 + CFC8 + CFC9 + CFC10 + CFC11 + CFC12
optimism =~ LOTR1 + LOTR2 + LOTR3 + LOTR4 + LOTR5 + LOTR6 + LOTR7 + LOTR8 + LOTR10
activation =~ BISBAS1 + BISBAS2 + BISBAS3 + BISBAS4 + BISBAS5 + BISBAS6 + BISBAS7 + BISBAS8 +
BISBAS9 + BISBAS10 + BISBAS11 + BISBAS12 + BISBAS13 + BISBAS14 + BISBAS15 + BISBAS16 +
BISBAS17 + BISBAS18 + BISBAS19 + BISBAS20 + BISBAS21 + BISBAS22 + BISBAS23 + BISBAS24
hope ~ activation
optimism ~ activation
future ~ hope + optimism + activation
'
fit <- sem(model, RRB_Hope_Optimism_Data, estimator = "MLR")
graph_sem(fit)
library(tidySEM)
library(tidySEM)
graph_sem(fit)
library(haven)
RRB_Hope_Optimism_Data <- read_sav("C:/Users/Yasminh/Downloads/RRB_Hope_Optimism_Data.sav")
View(RRB_Hope_Optimism_Data)
R.Version()
install.packages('devtools')
library(shiny)
library(wordcloud)
library(dplyr)
library(markdown)
library(readr)
ui <- shiny::navbarPage("Improve your self-image",
shiny::tabPanel("Introduction",
shiny::uiOutput("introduction")
),
shiny::tabPanel("Whitebook",
shiny::p("Describe what went well today, how it made you feel, and what
these events tell you about yourself. It's okay to repeat positive events,
feelings, or positive traits."),
shiny::textInput("q1_input", "Describe something that went well/you did
well today. Anything goes, big or small."),
shiny::textInput("q2_input", "How did the event make you feel?"),
shiny::textInput("q3_input", "What does the event say about you?
which positive trait is evident from this event? If there is more
than one positive trait that you can think of, enter the first trait,
click submit, fill in the second trait, submit, and
so on."),
shiny::actionButton("save_button", "Submit")
),
shiny::tabPanel("Positive trait wordcloud",
shiny::p("This is a wordcloud of all the positive traits you have entered in
your whitebook. Bigger words indicate that you have entered the positive
trait more often. Do you think these traits might describe you?"),
shiny::plotOutput("wordcloud")
)
)
server <- function(input, output, session) {
first_time <- shiny::reactiveValues(loaded = TRUE)
# Show welcome screen only during first loading app
shiny::observe({
if (first_time$loaded) {
shiny::showModal(shiny::modalDialog(
title = "Welcome!",
shiny::textInput("neg_selfimage", "Describe your negative self-image"),
easyClose = TRUE,
footer = shiny::actionButton("ok", "ok")
))
first_time$loaded <- FALSE
}
})
# Read the content of the introduction file
introduction_text <- readr::read_file("R/introduction.md")
# Render the introduction text using Markdown
output$introduction <- shiny::renderUI({
shiny::HTML(markdown::markdownToHTML(introduction_text))
})
# Check if data files exist (i.e. if first time starting app)
if (!file.exists("whitebook_data.csv")) {
whitebook_data <- data.frame(Event = character(0),
Pers_trait = character(0),
stringsAsFactors = FALSE)
readr::write_csv(whitebook_data, "whitebook_data.csv")
}
if (!file.exists("wordcloud_data.csv")) {
wordcloud_data <- data.frame(word = character(0),
freq = numeric(0),
stringsAsFactors = FALSE)
readr::write_csv(wordcloud_data, "wordcloud_data.csv")
}
# Load existing text data from CSV file
whitebook_data <- readr::read_csv("whitebook_data.csv", col_types = readr::cols())
wordcloud_data <- readr::read_csv("wordcloud_data.csv", col_types = readr::cols())
# Render wordcloud
output$wordcloud <- shiny::renderPlot({
if (nrow(wordcloud_data) > 0) {
generate_wordcloud(wordcloud_data)
}
})
# Get submitted input whitebook
shiny::observeEvent(input$save_button, {
q1 <- shiny::isolate(input$q1_input)
q2 <- shiny::isolate(input$q2_input)
q3 <- shiny::isolate(input$q3_input)
# Add submission to whitebook data
if (nchar(q1) > 0 | nchar(q2) > 0 | nchar(q3) > 0) {
row <- data.frame(Event = q1, Feeling = q2, Pers_trait = q3,
stringsAsFactors = FALSE)
whitebook_data <<- dplyr::bind_rows(whitebook_data, row)
readr::write_csv(whitebook_data, "whitebook_data.csv")
# Update wordcloud data based on whitebook data
word_counts <- dplyr::count(whitebook_data, Pers_trait)
wordcloud_data <<- as.data.frame(word_counts)
colnames(wordcloud_data) <- c("word", "freq")
readr::write_csv(wordcloud_data, "wordcloud_data.csv")
# Render updated wordcloud
output$wordcloud <- shiny::renderPlot({
generate_wordcloud(wordcloud_data)
})
}
})
}
shiny::shinyApp(ui = ui, server = server)
?date
?setwd
?getwd
?Sys.time
?R.version
.rs.restartR()
?rs.restart!()
?rs.restart()
?rs.restart
??rs.restart
setwd()
setwd("~/GitHub/Quak-ImproveYourSelfesteem/ImproveYourSelfimage_initial")
setwd("C:/Users/Yasminh/Documents/GitHub/Quak-ImproveYourSelfesteem/ImproveYourSelfimage_initial")
# set working directory to *inside* your R package
setwd("C:/Users/Yasminh/Documents/GitHub/Quak-ImproveYourSelfesteem/ImproveYourSelfimage_initial)
)
)
)))
diwhdih
ihdwpjdw
}
}}}
iofif
